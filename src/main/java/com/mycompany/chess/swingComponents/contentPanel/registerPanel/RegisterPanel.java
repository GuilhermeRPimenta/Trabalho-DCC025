/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.chess.swingComponents.contentPanel.registerPanel;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.regex.*;

/**
 *
 * @author wingert
 */
public class registerPanel extends javax.swing.JPanel {
    
    private JTextField usuarioField;
    private JTextField emailField;
    private JPasswordField senhaField;
    private JButton cadastrarButton;

    /**
     * Creates new form registerPanel
     */
    public registerPanel() {
        initComponents();
        customInitComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    private void customInitComponents() {

        // Inicialização dos componentes
        usuarioField = new JTextField();
        emailField = new JTextField();
        senhaField = new JPasswordField();
        cadastrarButton = new JButton("Cadastrar");

        // Layout
        setLayout(new GridLayout(4, 2, 10, 10));

        // Adiciona os componentes ao painel
        add(new JLabel("Nome de Usuário:"));
        add(usuarioField);
        add(new JLabel("Email:"));
        add(emailField);
        add(new JLabel("Senha:"));
        add(senhaField);
        add(new JLabel());  // Espaço vazio para o layout
        add(cadastrarButton);

        // Ação do botão cadastrar
        cadastrarButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String usuario = usuarioField.getText();
                String email = emailField.getText();
                String senha = new String(senhaField.getPassword());

                // Validação de e-mail e senha
                if (validarEmail(email) && validarSenha(senha)) {
                    JOptionPane.showMessageDialog(null, "Cadastro realizado com sucesso!");
                } else {
                    JOptionPane.showMessageDialog(null, "Erro no cadastro: verifique os dados.");
                }
            }
        });
    }
    
    private boolean validarEmail(String email) {
        String regexEmail = "^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$";
        return Pattern.matches(regexEmail, email);
    }
    
    private boolean validarSenha(String senha) {
        String regexSenha = "^(?=.*[A-Z])(?=.*[!@#$&*])(?=.*[0-9])(?=.*[a-z]).{8,}$";
        return Pattern.matches(regexSenha, senha);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
